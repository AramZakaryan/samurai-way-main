{"version":3,"file":"static/js/965.a0a29285.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Users/Users.module.css?b9d0","webpack://samurai-way/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.tsx","components/Users/UsersPresentational.tsx","redux/selectors.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"Users_userPhoto__wCV7+\"};","// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__CRNLp\"};","import S from \"./Paginator.module.css\"\nimport React, { useEffect, useState } from \"react\"\n\ntype PaginatorType = {\n  totalItemsCount: number\n  pageSize: number\n  selectedPage: number\n  setSelectedPage: (selectedPageNumber: number) => void\n  portionSize?: number\n}\n\nexport const Paginator: React.FC<PaginatorType> = ({\n  totalItemsCount,\n  pageSize,\n  selectedPage,\n  setSelectedPage,\n  portionSize = 10,\n}) => {\n  let pageCount = Math.ceil(totalItemsCount / pageSize)\n  let pages = []\n  for (let i = 1; i <= pageCount; i++) {\n    pages.push(i)\n  }\n\n  let portionCount = Math.ceil(pageCount / portionSize)\n\n  /** ZA: number of current portion */\n  const [currPortion, setCurrPortion] = useState(Math.floor(selectedPage / portionSize) + 1)\n  /** ZA: number of the page on the left of the current portion */\n  let currPortionLeftPage = (currPortion - 1) * portionSize + 1\n  /** ZA: number of the page on the right of the current portion */\n  let currPortionRightPage = Math.min(currPortion * portionSize, pageCount)\n\n  const leftButtonHandler = () => {\n    setCurrPortion(currPortion - 1)\n  }\n  const rightButtonHandler = () => {\n    setCurrPortion(currPortion + 1)\n  }\n\n  return (\n    <div>\n      {currPortion > 1 && <button onClick={leftButtonHandler}>left</button>}\n      {pages\n        .filter((p) => p <= currPortionRightPage && p >= currPortionLeftPage)\n        .map((p) => (\n          <span\n            key={p}\n            className={selectedPage === p ? S.selectedPage : \"\"}\n            onClick={() => setSelectedPage(p)}\n          >\n            {\" \"}\n            {p}{\" \"}\n          </span>\n        ))}\n      {currPortion < portionCount && <button onClick={rightButtonHandler}>right</button>}\n\n      {/*{pageCount > 10 && <span> ... {pageCount} </span>}*/}\n    </div>\n  )\n}\n","import S from \"./Users.module.css\"\nimport nomiage from \"../../assets/images/noimage.png\"\nimport React from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport { UsersPageDataType } from \"redux/types\"\nimport { Paginator } from \"components/common/Paginator/Paginator\"\n\ntype UsersFuncPresentType = {\n  usersPageData: UsersPageDataType\n  follow: (userID: number) => void\n  unfollow: (userID: number) => void\n  setSelectedPage: (selectedPageNumber: number) => void\n}\n\nexport const UsersPresentational: React.FC<UsersFuncPresentType> = ({\n  usersPageData,\n  follow,\n  unfollow,\n  setSelectedPage,\n}) => {\n  return (\n    <div>\n      <div>coucou users</div>\n      <Paginator\n        totalItemsCount={usersPageData.totalUserCount}\n        pageSize={usersPageData.pageSize}\n        selectedPage={usersPageData.selectedPage}\n        setSelectedPage={setSelectedPage}\n      />\n\n      {usersPageData.usersData.map((u) => (\n        <div key={u.id}>\n          <span>\n            <div>\n              <NavLink to={\"/profile/\" + u.id}>\n                <img src={u.photos.small ?? nomiage} className={S.userPhoto} />\n              </NavLink>\n            </div>\n            <div>\n              {u.followed ? (\n                <button\n                  disabled={usersPageData.allFollowingInProgress.some((el) => el === u.id)} // = true\n                  onClick={() => {\n                    unfollow(u.id)\n                  }}\n                >\n                  Unfollow\n                </button>\n              ) : (\n                <button\n                  disabled={usersPageData.allFollowingInProgress.some((el) => el === u.id)} // = true\n                  onClick={() => {\n                    follow(u.id)\n                  }}\n                >\n                  Follow\n                </button>\n              )}\n            </div>\n          </span>\n          <span>\n            <span>\n              <div> {u.name}</div>\n              <div>{u.status}</div>\n            </span>\n          </span>\n        </div>\n      ))}\n    </div>\n  )\n}\n","import { stateReduxType } from \"redux/storeRedux\"\nimport { createSelector } from \"reselect\"\n\n/////////// Users Selectors\nexport const selectUsersPageData = (state: stateReduxType) => state.usersPageData\n\n// export const selectInitialized = (state: stateReduxType) => state.app.initialized\n// export const selectUsersData = (state: stateReduxType) => state.usersPageData.usersData\n// export const selectFilteredUsers = createSelector(\n//   [selectUsersData, selectInitialized],\n//   (usersData, initialized) => usersData.filter((u) => u.status === \"Hurrah\"),\n// )\n// export const selectFilteredUsers = (state: stateReduxType) =>\n//   state.usersPageData.usersData.filter((u) => u.status === \"Hurrah\")\n\n/////////// Profile Selectors\n\n/////////// Dialogs Selectors\n","import React from \"react\"\nimport { stateReduxType } from \"redux/storeRedux\"\nimport { follow, getUsers, setSelectedPage, unfollow } from \"redux/usersReducer\"\nimport { connect } from \"react-redux\"\nimport { UsersPresentational } from \"./UsersPresentational\"\nimport { Preloader } from \"../common/Preloader/Preloader\"\nimport { UsersPageDataType } from \"redux/types\"\nimport { withAuthRedirect } from \"hoc/WithAuthRedirect\"\nimport { compose } from \"redux\"\nimport { selectUsersPageData } from \"redux/selectors\"\n\n////////// UsersClassContainer\n\nexport type UsersClassContainerPropsType = {\n  usersPageData: UsersPageDataType\n  follow: (userID: number) => void\n  unfollow: (userID: number) => void\n  setSelectedPage: (selectedPageNumber: number) => void\n  getUsers: (selectedPage: number, pageSize: number) => void\n}\n\nexport class UsersClassContainer extends React.Component<UsersClassContainerPropsType, any> {\n  constructor(props: UsersClassContainerPropsType) {\n    super(props)\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.usersPageData.selectedPage, this.props.usersPageData.pageSize)\n  }\n\n  setSelectedPageHandler = (selectedPageNumber: number) => {\n    this.props.setSelectedPage(selectedPageNumber)\n    this.props.getUsers(selectedPageNumber, this.props.usersPageData.pageSize)\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.usersPageData.isFetching ? (\n          <Preloader />\n        ) : (\n          <UsersPresentational\n            usersPageData={this.props.usersPageData}\n            follow={this.props.follow}\n            unfollow={this.props.unfollow}\n            setSelectedPage={this.setSelectedPageHandler}\n          />\n        )}\n      </>\n    )\n  }\n}\n\n// export type MapStateToPropsType = any\nexport type MapStateToPropsType = Pick<UsersClassContainerPropsType, \"usersPageData\">\n\ntype MapDispatchToPropsType = Pick<\n  UsersClassContainerPropsType,\n  \"follow\" | \"unfollow\" | \"setSelectedPage\" | \"getUsers\"\n>\n\nconst mapStateToProps = (state: stateReduxType): MapStateToPropsType => {\n  return {\n    usersPageData: selectUsersPageData(state),\n    // filteredUsers: selectFilteredUsers(state),\n  }\n}\n\nconst mapDispatchToProps: MapDispatchToPropsType = {\n  follow,\n  unfollow,\n  setSelectedPage,\n  getUsers,\n}\n\nexport const UserCompose = compose<React.ComponentType>(\n  connect(mapStateToProps, mapDispatchToProps),\n  // withAuthRedirect, // temporarily commented\n)(UsersClassContainer)\n\n////////// General Structure\n// UsersPresentational >>>\n//    UsersClassContainer >>>\n//       UserCompose\n"],"names":["Paginator","totalItemsCount","pageSize","selectedPage","setSelectedPage","portionSize","pageCount","Math","ceil","pages","i","push","portionCount","useState","floor","currPortion","setCurrPortion","currPortionLeftPage","currPortionRightPage","min","onClick","filter","p","map","className","S","UsersPresentational","usersPageData","follow","unfollow","totalUserCount","usersData","u","to","id","src","photos","small","nomiage","followed","disabled","allFollowingInProgress","some","el","name","status","selectUsersPageData","state","UsersClassContainer","props","setSelectedPageHandler","selectedPageNumber","getUsers","this","isFetching","Preloader","React","mapDispatchToProps","UserCompose","compose","connect"],"sourceRoot":""}